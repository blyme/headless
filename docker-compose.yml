version: '3'

services:
  web:
    image: ghcr.io/reload/drupal-apache-fpm:latest
    ports:
      - '80'
      - '443'
    depends_on:
      - fpm
    volumes:
      - 'projectroot:/var/www/'
      - '${HOME}/.local/share/mkcert:/mkcert:ro'
      - '${HOME}/.local/share/dev_certificates:/cert:rw'
    environment:
      VIRTUAL_PROTO: https
      VIRTUAL_HOST: "${COMPOSE_PROJECT_NAME:-headless}.${DEV_TLD:-docker}"

  fpm:
    image: ghcr.io/reload/docker-drupal-php7-fpm:8.1
    ports:
      - '9000'
    depends_on:
      - db
    working_dir: /var/www
    labels:
      org.drush.bin: /var/www/vendor/bin/drush
    volumes:
      - 'projectroot:/var/www/'
      - './php.ini:/etc/php/8.1/fpm/conf.d/ZZ-headless.ini'
      - './docker/my_init.d/install-cron.sh:/etc/my_init.d/install-cron.sh'
    environment:
      PATH: '/var/www/vendor/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
      DRUSH_OPTIONS_URI: "https://${COMPOSE_PROJECT_NAME:-headless}.${DEV_TLD:-docker}"
      PHP_EXTRA_EXTENSIONS: intl
      XDEBUG_MODE: "debug,develop"
      XDEBUG_CONFIG: "client_host=host.docker.internal"
      discover_client_host: "0"

  db:
    image: mariadb:10.3.9
    ports:
      - '3306'
    ## Below setup is for using a prebuild db-datadir.
    ## If you want af db-data dump use this image instead (and remove
    ## the volumes and depends_on).
    # image: eu.gcr.io/reloaddk-data/db-data:headless-latest

    # # If you want a clean database use the below environment instead
    # # (and remove the volumes and depends_on).
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db
      MYSQL_USER: db
      MYSQL_PASSWORD: db
    # # If you want to use a sql dump locally uncomment the
    # # below and environment (and remove the volumes and depends_on and db-data).
    volumes:
      - "./docker/db:/docker-entrypoint-initdb.d"

  node:
    image: node:18-slim
    ports:
      - '3000:3000'
    volumes:
      - 'cache:/npm-cache'
      - '${PWD}:/var/www/'
    working_dir: /var/www/frontend
    environment:
      PATH: '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
      npm_config_cache: '/npm-cache/node'
      VIRTUAL_PROTO: https
      VIRTUAL_HOST: "${COMPOSE_PROJECT_NAME:-frontend}.${DEV_TLD:-docker}"
    tty: true
    command: sh -c "npm install && npm run dev"

volumes:
  # NPM cache that survives docker-reset.sh
  cache:
  projectroot:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}
      o: bind